- content_for :javascript do
  initialize_admin_listing_fields_view("#{I18n.locale}");

- content_for :title_header do
  %h1= t(".listing_fields")
  
= render :partial => "layouts/left_hand_navigation", :locals => { :links => admin_links_for(@community) }

.left-navi-section
  - if @custom_fields.empty?
    .row
      .col-12
        = t(".no_custom_listing_fields")
  - else
    #custom-fields-list
      .row.visible-tablet
        .col-5.custom-fields-list-title
          = t(".field_title")
        .col-5.custom-fields-list-title
          = t(".field_type")
      - @custom_fields.each do |custom_field|
        .row
          .col-5
            %span.custom-fields-mobile-list-title.hidden-tablet
              = t(".field_title")
            = custom_field.name(I18n.locale)
          .col-5
            %span.custom-fields-mobile-list-title.hidden-tablet
              = t(".field_type")
            %div
              = t("admin.custom_fields.field_types.#{custom_field.type.downcase}")
            %div.custom-fields-list-options
              = custom_field.options.collect { |option| option.title(I18n.locale) }.join(", ")
          .col-2
            %span.custom-fields-mobile-list-title.hidden-tablet
              = t(".actions")
            = link_to admin_custom_field_path(custom_field), :method => :delete, :class => "custom-fields-action-remove", :confirm => t(".remove_field_confirmation", :field_name => custom_field.name(I18n.locale)) do
              = icon_tag("cross", ["icon-fix"])
  .row
    .col-12
      = link_to t(".add_new_field"), "#", :id => "add-new-field-link"

  #new-field-form.new-field-form
    %h2= t(".add_new_field_to_listing_form")
    = form_for @custom_field, :url => admin_custom_fields_path do |form|
      
      / Field name  
      = form.label :name_attributes, t(".field_title")
      - available_locales.each do |locale_name, locale_value|
        .row
          - if available_locales.size > 1
            .col-2
              = label_tag "custom_field[name_attributes][#{locale_value}]", locale_name + ": ", :class => "new-field-name-locale-label"
          .col-8
            = text_field_tag "custom_field[name_attributes][#{locale_value}]", @custom_field.name(locale_value), :class => "new-field-name-locale-text-field required"

      / Field type
      = form.label :type, t(".field_type")
      .row
        .col-12
          = form.select :type, custom_field_dropdown_options(CustomField::VALID_TYPES)
      
      / Field categories
      - if @current_community.categories.size > 1
        = form.label :category_attributes, t(".categories")
        .row
          .col-12
            .custom-field-categories-container.clearfix#custom-field-categories-container
              - @current_community.categories.reject { |c| !c.children.empty? }.each do |category|
                .custom-field-categories-checkbox-container
                  = check_box_tag "custom_field[category_attributes][][category_id]", "#{category.id}", @custom_field.categories.include?(category) ? true : false, :id => "#{category.name}_checkbox", :class => "custom-field-category-checkbox"
                  = label_tag "#{category.name}_checkbox", category.display_name, :class => "custom-field-category-checkbox-label"
      - else
        = hidden_field_tag "custom_field[category_attributes][][category_id]", @current_community.categories.first.id
      
      / Field option attributes
      = form.label :option_attributes, t(".dropdown_options")
      .row
        .col-12
          #options.custom-field-options
            - @custom_field.options.each_with_index do |option, index|
              = render :partial => "new_option", :locals => { :option => option, :index => index }
          = link_to t(".add_option"), add_option_admin_custom_fields_path, :remote => true, :id => "custom-fields-add-option"
      
        
      .add-custom-field-buttons
        .inline-button-container
          = form.button t(".save")
        .inline-button-container
          %a{:id => "cancel-new-field-link", :class => "cancel-button"}
            .content
              = t(".cancel")
