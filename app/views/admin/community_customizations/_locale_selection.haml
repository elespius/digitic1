- content_for :extra_javascript do
  :javascript
    var selectize = $('#locale-selection').selectize({plugins: ['remove_button'], items: #{enabled_locale_keys.to_json.html_safe}})[0].selectize;
    selectize.on("change", function(value) {
      var customLocaleExists = #{custom_locale.present?}
      if (!customLocaleExists) {
        defaultLanguage = value ? selectize.options[value[0]].text.trim() : "None";
        $(".selected-default-language-name").text(defaultLanguage);
        $('#edit_community').valid();
      }
    });
%div.locale-selection
  .input-header
    = t("admin.communities.edit_details.enabled_languages")
  .info-text-container
    .info-text-icon
      %i.icon-info-sign
    .info-text-content
      %p
        - if custom_locale.present?
          = t("admin.communities.edit_details.enabled_languages_description_with_custom")
        - else
          = t("admin.communities.edit_details.enabled_languages_description")
  - if custom_locale.present?
    = t('admin.communities.edit_details.custom_locale_label')
    = custom_locale[:name]
    = hidden_field_tag("custom_locale", custom_locale[:key])
  .row.col-10
    %select.locale-selection__input-widget{ multiple: true, name: "enabled_locales[]", id: "locale-selection", required: custom_locale.blank? }
      %option{ value: "" }= t("admin.communities.edit_details.enabled_languages_placeholder")
      - all_locales.each do |locale|
        %option{ value: locale }
          = t("admin.communities.available_languages.#{locale}")
  - unless custom_locale.present?
    %p#selected-default-language{ style: "clear: both;" }
      = t("admin.communities.edit_details.default_language")
      %span.selected-default-language-name
        = custom_locale.present? ? custom_locale[:name] : t("admin.communities.available_languages.#{enabled_locale_keys.first}")

.clearfix{ style: "width: 100%;" }