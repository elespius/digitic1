apiVersion: v1
kind: List
items:

# INGRESS

- apiVersion: extensions/v1beta1
  kind: Ingress
  metadata:
    generation: 2
    name: sharetribe
  spec:
    rules:
    - host: www.vikinggarage.com
      http:
        paths:
        - backend:
            serviceName: sharetribe
            servicePort: 3000
  status:
    loadBalancer:
      ingress:
        - ip: "$(ClusterIP)"

# SERVICES

- apiVersion: v1
  kind: Service
  metadata:
    name: sharetribe
    annotations:
        field.cattle.io/targetWorkloadIds: '["deployment:sharetribe_namespace:sharetribe"]'
  spec:
    clusterIP: null
    ports:
    - port: 3000
      protocol: TCP
      targetPort: 3000
    sessionAffinity: None
    type: ClusterIP
    selector:
      workloadID_sharetribe: "true"
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      field.cattle.io/targetWorkloadIds: '["deployment:sharetribe_namespace:sharetribe"]'
    name: mysql
  spec:
    clusterIP: null
    ports:
    - name: mysql
      port: 3306
      protocol: TCP
      targetPort: 3306
    selector:
      workloadID_sharetribe: "true"
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

# SECRETS

- apiVersion: v1
  data:
    SECRET_KEY: ImUzY2E0NDZkOTgwYmQ4NzZhYWZlZmU2NDM3YzBlMDVlN2FkNGQyMzYxYmJjZGFlMDBhZjkzNGE0ZWZkNDUwZGRhYzZjMGI2MWI5OWExMmQ2YmIxZGU1NjJiNGM4MDk1YTczMTA4OWFhZTAyOTAwMWZiNDkxZTc2MWNhY2MwODZkIg==
    SECRET_KEY_BASE: IjFlZmQ3N2FhMmY2ZGVhZDg0MTJlNjg2Zjk4OWIwZjI3YTJhNDI3YjNiODY2NjkzYjUzMWQzNGZjNTlhMzMxMzVlODU0YmQ2NjBhZDQ5M2I0OTU3ZGJlYmQ0MTA3ZTNhZTgxODg3ZTI4YjE3MThlMDcwZWExMzU4M2IxZWUxOTMwIg==
  kind: Secret
  metadata:
    name: sharetribe-secret
  type: Opaque
- apiVersion: v1
  data:
    MYSQL_DATABASE: c2hhcmV0cmliZV9wcm9kdWN0aW9u
    MYSQL_PASSWORD: c2VjcmV0
    MYSQL_ROOT_PASSWORD: c2VjcmV0
    MYSQL_USER: c2hhcmV0cmliZQ==
  kind: Secret
  metadata:
    name: sharetribe-mysql
  type: Opaque

# VOLUMES

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: sharetribe
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: 5Gi
    storageClassName: gp2

# CONFIG MAPS

- apiVersion: v1
  data:
    DISABLE_DATABASE_ENVIRONMENT_CHECK: "1"
    MAGICK_MAP_LIMIT: 64MiB
    MAGICK_MEMORY_LIMIT: 256MiB
    MAGICK_TIME_LIMIT: "30"
    QUEUES: default,paperclip,mailers
  kind: ConfigMap
  metadata:
    name: sharetribe-worker-config

# DEPLOYMENTS

- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      workload.user.cattle.io/workloadselector: deployment-sharetribe_namespace-sharetribe
    name: sharetribe
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        workload.user.cattle.io/workloadselector: deployment-sharetribe_namespace-sharetribe
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
      type: RollingUpdate
    template:
      metadata:
        labels:
          workload.user.cattle.io/workloadselector: deployment-sharetribe_namespace-sharetribe
      spec:
        containers:
        # sharetribe (web)
        - envFrom:
          - secretRef:
              name: sharetribe-secret
              optional: false
          image: tokesplatform/sharetribe
          imagePullPolicy: Always
          name: sharetribe
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: {}
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true

        # worker
        - args:
          - bundle
          - exec
          - rake
          - db:structure:load
          - jobs:work
          envFrom:
          - configMapRef:
              name: sharetribe-worker-config
              optional: false
          - secretRef:
              name: sharetribe-secret
              optional: false
          image: tokesplatform/sharetribe
          imagePullPolicy: Always
          name: worker
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities: {}
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true

        # mysql
        - envFrom:
          - secretRef:
              name: sharetribe-mysql
              optional: false
          image: mysql:5.7
          imagePullPolicy: Always
          name: mysql
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true
          volumeMounts:
          - mountPath: /var/lib/mysql
            name: sharetribe
            subPath: test

        # memcached
        - image: memcached:latest
          imagePullPolicy: Always
          name: memcached
          resources: {}
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          stdin: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          tty: true

        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: sharetribe
          persistentVolumeClaim:
            claimName: sharetribe
